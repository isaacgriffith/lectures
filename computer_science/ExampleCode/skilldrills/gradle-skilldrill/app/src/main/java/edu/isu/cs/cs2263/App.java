/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.isu.cs.cs2263;

import com.google.common.collect.Lists;
import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Priority;
import javafx.scene.text.TextAlignment;
import javafx.stage.Stage;

import java.util.List;

public class App extends Application {

    private static final String FILE_NAME = "./data.json";
    private List<Student> students;
    private IOManager iom;
    private ListView<Student> studentList;
    private ListView<Course> courseList;

    public App() {
        super();
        students = Lists.newArrayList();
        iom = new IOManager();
    }

    public static void main(String[] args) {
        Application.launch();
    }

    /**
     * The main entry point for all JavaFX applications.
     * The start method is called after the init method has returned,
     * and after the system is ready for the application to begin running.
     *
     * <p>
     * NOTE: This method is called on the JavaFX Application Thread.
     * </p>
     *
     * @param primaryStage the primary stage for this application, onto which
     *                     the application scene can be set.
     *                     Applications may create other stages, if needed, but they will not be
     *                     primary stages.
     * @throws Exception if something goes wrong
     */
    @Override
    public void start(Stage primaryStage) throws Exception {
        primaryStage.setTitle("Course View");

        BorderPane main = new BorderPane();
        main.setPadding(new Insets(10,10,10,10));

        // Student List Section
        BorderPane studentPane = new BorderPane();
        studentPane.setTop(new Label("Students:"));

        studentList = new ListView<>();
        Label taking = new Label("Is Taking");
        taking.setAlignment(Pos.CENTER);
        taking.setTextAlignment(TextAlignment.CENTER);
        BorderPane listTakingPane = new BorderPane();
        listTakingPane.setCenter(studentList);
        listTakingPane.setRight(taking);
        listTakingPane.setPadding(new Insets(10,10,10,10));
        studentPane.setCenter(listTakingPane);

        studentList.getSelectionModel().selectedItemProperty().addListener(listener -> {
            updateCourses();
        });

        // Course List Section
        BorderPane coursePane = new BorderPane();
        coursePane.setTop(new Label("Courses:"));
        coursePane.setPadding(new Insets(10, 10, 10, 10));

        courseList = new ListView<>();
        coursePane.setCenter(courseList);

        HBox listPane = new HBox(10, studentPane, coursePane);
        HBox.setHgrow(studentPane, Priority.ALWAYS);
        HBox.setHgrow(coursePane, Priority.ALWAYS);

        // Button Section
        BorderPane btnPane = new BorderPane();
        Button loadData = new Button("Load Data");
        loadData.setOnAction(event -> {
            loadStudents();
        });
        btnPane.setRight(loadData);

        main.setBottom(btnPane);
        main.setCenter(listPane);

        Scene scene = new Scene(main, 800, 500);
        primaryStage.setScene(scene);

        primaryStage.show();
    }

    private void loadStudents() {
        students = iom.readData(FILE_NAME);
        studentList.getItems().clear();
        for (Student s : students)
            studentList.getItems().add(s);
    }

    private void updateCourses() {
        int index = studentList.getSelectionModel().getSelectedIndex();
        Student selected = students.get(index);

        courseList.getItems().clear();
        for (Course c : selected.getCourses())
            courseList.getItems().add(c);
    }
}
